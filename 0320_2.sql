--  <실습과제>  --

--8페이지
SELECT EMPNO AS EMPLOYEE_NO
	 , ENAME AS EMPLOYEE_NAME
	 , JOB
	 , MGR AS MANAGER
	 , SAL AS SALARY
	 , COMM AS COMMISSION
	 , DEPTNO AS DEPARTMENT_NO
FROM EMP
ORDER BY DEPTNO DESC, ENAME ASC;  
--ORDER BY DEPTNO DESC, ENAME; ASC생략가능


--9페이지
SELECT a.ENAME
	 , a.SAL
	 , a.EMPNO
FROM EMP
WHERE COMM IS NULL;


--10페이지
--1
SELECT *
FROM EMP
WHERE ENAME LIKE '%S';

--2
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE JOB = 'SALESMAN' AND DEPTNO = 30;

--3
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE (DEPTNO = 20 OR DEPTNO = 30) AND SAL > 2000;
--WHERE DEPTNO IN(20, 30) AND SAL > 2000; 활용도 측면에서 IN이 더 좋음

--4
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 20 AND SAL > 2000
UNION
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 30 AND SAL > 2000;

--5
SELECT *
FROM EMP
WHERE COMM IS NULL
	AND MGR IS NOT NULL
	AND JOB IN ('MANAGER', 'CLERK')
	AND ENAME NOT LIKE '_L%';


--11페이지
SELECT EMPNO, ENAME
	, RPAD(SUBSTR(EMPNO, 1, 2), 4, '*') AS "EMPNO 마스킹 처리"
	, RPAD(SUBSTR(ENAME, 1, 1), LENGTH(ENAME), '*') AS  "ENAME 마스킹 처리"
FROM EMP
WHERE LENGTH(ENAME) >= 6;

SELECT EMPNO, ENAME, JOB, SAL
	, SAL / 20 AS DAY_PER_SAL
	, SAL / 20 / 8 AS HOUR_PER_SAL
FROM EMP
WHERE JOB IN ('SALESMAN', 'CLERK')
ORDER BY SAL;


--12페이지






------------------------------------------------

--오라클함수
SELECT *
 FROM V$SQLFN_METADATA V
 WHERE V.NAME = 'NVL'
 ;


--문자열함수
-- UPPER : 대문자변환
-- LOWER : 소문자변환
-- LENGTH : 문자열길이
-- 

SELECT ENAME, UPPER(ENAME), LOWER(ENAME), INITCAP(ENAME)
 FROM EMP;

SELECT *
 FROM EMP
 WHERE UPPER(ENAME) = UPPER('SCOTT'); -- ScOtT , scott 등 같게 만들어서 비교

SELECT ENAME, JOB, MGR, DEPTNO FROM EMP
 WHERE 
 
 
SELECT ename
	, UPPER(ename) AS TO_UPPER_NAME
	, UPPER(ename) AS TO_LOWER_NAME
 FROM EMP;
 
SELECT *
 FROM EMP
 WHERE UPPER(ename) = UPPER('scott');


--TRIM : 공간제거

SELECT trim(' _____ ORACLE _ _ _      ')  --앞뒤 연속된공백 제거
 FROM DUAL;
 
SELECT trim(ename)
 FROM EMP;


--CONCAT : 문자열 연결 ( 더하기)
SELECT EMPNO
	, ENAME
	, CONCAT(empno, ename)
	, CONCAT(empno, ' ')
 FROM emp
 WHERE ename = :name;
 --WHERE ename = 'SMITH';


--REPLACE : 문자열 교체
-- 예 : 전화번호, 이메일, 집주소 등
SELECT '010-1234-5678' AS MOBILE_PHONE
	, REPLACE('010-1234-5678', '-', '') AS REPLACED_NUMBER
 FROM DUAL;


--LPAD, RPAD 문자열 채우기하는 함수
--PADDING 함수는 문자열의 자리수를 일치시키기 위한 함수
--CHAR글자수 맞춰두면 비교하기 유리
SELECT LPAD('ORA_1234_XE', 20) AS LPAD_20
	, RPAD('ORA_1234_XE', 20) AS RPAD_20
 FROM DUAL;

SELECT 'ORCLE'
	, RPAD('ORACLE', 10, '*') AS RPAD_1
	, LPAD('ORACLE', 10) AS LPAD_2
	, RPAD('ORACLE', 10) AS RPAD_2
 FROM DUAL;


--NUMBER : 숫자를 다루는 함수들
/*
 * 정수(INTEGER), 부동소수(FLOAT) : 소수점이 있는 숫자
 * 부동소수의 경우 소수점 이하 정밀도 차이가 발생
 * PI ~
 */
SELECT *
FROM EMP E
WHERE E.deptno >= :input_no;  --HOST VAL -------------?

SELECT ROUND(3.148, 3) AS ROUND0
	, ROUND(123.456789, 3) AS ROUND1
	, TRUNC(123.4567, 2) AS TRUNC0
	, TRUNC(-123.4567, 2) AS TRUNC1
 FROM DUAL;

SELECT TRUNC()

SELECT CEIL(3.14) AS CEIL0
	, FLOOR(3.14) AS FLOOR0
	, MOD(15,6) AS MOD0
	, MOD(11,1) AS MOD1
 FROM DUAL;

--MOD : 나머지구하는 함수
SELECT MOD()

--REMAINDER(a,b) : a를 b로 나눈 나머지 
SELECT REMAINDER(15, 2) AS R1
	, REMAINDER(-11,4) AS R2
 FROM DUAL;

--POWER
SELECT POWER(3,2), POWER(-3,3)
 FROM DUAL;

--DATE : 날짜
--2023/04/01 MINUS 1DAY --> ???
--날짜를 표현하는 일련번호 숫자가 존재
SELECT SYSDATE AS NOW
	, SYSDATE -1 AS YESTERDAY
	, SYSDATE +10 AS TEN_DAYS_FROM_NOW
 FROM DUAL;

-- :MONTH : 입력 변수를 받아 월수 계산
SELECT ADD_MONTHS(SYSDATE, :MONTH)
 FROM DUAL;

SELECT EMPNO, ENAME, HIREDATE
	, ADD_MONTHS(HIREDATE, 12 * 20) AS WORK10YEAR
 FROM EMP;

SELECT EMPNO, ENAME, HIREDATE, SYSDATE
 FROM EMP
 WHERE ADD_MONTHS(HIREDATE, 12*40) > SYSDATE;


--MONTHS_BETWEEN(날짜1, 날짜2)
SELECT ENAME, HIREDATE
	, MONTHS_BETWEEN(SYSDATE, HIREDATE)/12 AS YEAR1
 FROM EMP;

SELECT SYSDATE AS now
	, NEXT_DAY(SYSDATE, '월요일') AS n_date
	, LAST_DAY(SYSDATE) AS l_date
 FROM DUAL;               
 
SELECT SYSDATE
	,NEXT_DAY(SYSDATE,'월요일')
	,LAST_DAY(SYSDATE)
 FROM DUAL;         ----------------??

 
SELECT SYSDATE, ROUND(SYSDATE, 'CC') AS FORMAT_CC
		,ROUND(SYSDATE, 'YYYY') AS FORMAT_YYYY   -- 반올림
		,ROUND(SYSDATE, 'Q') AS FORMAT_Q
		,ROUND(SYSDATE, 'DDD') AS FORMAT_DDD
		,ROUND(SYSDATE, 'HH') AS FORMAT_HH
 FROM DUAL;


--형변환함수 : DATA TYPE을 변형
-- : CAST, UP-CAST, DOWN-CAST
--DOWN-CAST : 큰 수를 담는 데이터형에서 작은수를 담는 데이터형으로 명시적 변환.
--			  숫자를 줄이게되면 문제발생 가능성
-- 예시 : 1234.3456  --> 234.3 (데이터가 짤림)


--24시간 표시하기
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24')
 FROM DUAL;

--시분초 표시
SELECT TO_CHAR(SYSDATE, 'DD  HH24 : MI : SS')
 FROM DUAL;

SELECT SYSDATE
	, TO_CHAR(SYSDATE, 'MM') AS MM1
	, TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = KOREAN') AS MON_KOR
 FROM DUAL;


SELECT SYSDATE
	, TO_CHAR(SYSDATE, 'HH24:MI;SS') AS TIME
 FROM DUAL;

SELECT TO_NUMBER('1,000,000','999,999,999') AS CUR_TO_NUM    -- 자릿수
FROM DUAL;

SELECT TO_DATE('2023/03/20', 'YYYY/MM/DD')  AS YMD
 FROM DUAL;

--TO_DATE(입력날짜, 'RR-MM-DD')
--TO_DATE(입력날짜, 'YY-MM-DD')
--날짜 포멧 RR, YY 비교

SELECT TO_DATE('49/12/10','RR/MM/DD') AS RR_YEAR_49           -------?? 1949가 나와야하는데..
	, TO_DATE('50/12/10','YY/MM/DD') AS YY_YEAR_50
 FROM DUAL;


--NULL : 알 수 없는 값. 계산 불가능
--NULL값 비교는 IS NULL <> IS NOT NULL

--NVL(입력값, NULL이면 대체할 값)  --> 매우중요!!
--NVL2(입력값, NULL이 아닌경우, NULL인 경우)
SELECT EMPNO
	, SAL * 12 + NVL(COMM, 0) AS SAL12
	, JOB
	, TO_CHAR(HIREDATE, 'YYYY-DMM-DD') AS YMD
 FROM EMP
 ORDER BY SAL12 DESC;
 

/*DECODE(입력컬럼값
	 	, '비교값1', 처리1
	 	, '비교값2', 처리2
	 	, '...', 처리..) AS 별칭
*/
/*CASE  컬럼값
	 	WHEN '값1' THEN 처리1
		WHEN '값2' THEN 처리2
		ELSE
		END AS 별칭
 
 DECODE가 더 직관적
*/ 
